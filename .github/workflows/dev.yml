name: dev

on:
  push:
    branches: [main]

jobs:
  build:
    env:
      NODE_VERSION: 22
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build NestJS Application
        uses: ./.github/actions/build
        with:
          nodeVersion: ${{ env.NODE_VERSION }}
          nodeAuthToken: ${{ secrets.NODE_AUTH_TOKEN }}
          cache: "pnpm"

      - name: CI Checks
        uses: ./.github/actions/ci-checks
        with:
          nodeVersion: ${{ env.NODE_VERSION }}
          nodeAuthToken: ${{ secrets.NODE_AUTH_TOKEN }}
          sonarToken: ${{ secrets.SONAR_TOKEN }}
          sonarHostUrl: ${{ secrets.SONAR_HOST_URL }}
          cache: "pnpm"

  image:
    uses: aplaceformom/workflows/.github/workflows/docker-build.yaml@main
    needs: build
    with:
      env: dev
      deploy-tag: ${{github.sha}}
      ecr-root: true
      push: true
      deployment-role: "arn:aws:iam::373477481654:role/${YOUR_SERVICE_NAME}-${DEPLOYMENT_SLOT}-deploy"
      deployment-slot: ${DEPLOYMENT_SLOT}
    secrets:
      build-args: |
        NODE_AUTH_TOKEN=${{secrets.NODE_AUTH_TOKEN}}
        APP_BUILD=${{github.sha}}
        APP_VERSION=${{github.sha}}
  deploy:
    uses: aplaceformom/ecs-deploy-action/.github/workflows/deploy-ecs-migrating.yml@v1
    needs: image
    with:
      target-environment: dev
      task-definition-file: infrastructure/tasks/task-definition.dev.json
      image-uri: 373477481654.dkr.ecr.us-west-2.amazonaws.com/${YOUR_SERVICE_NAME}-${DEPLOYMENT_SLOT}:${{github.sha}}
      role-to-assume: ${YOUR_SERVICE_NAME}-${DEPLOYMENT_SLOT}
      ecs-service: ${YOUR_SERVICE_NAME}-${DEPLOYMENT_SLOT}
      ecs-cluster: default

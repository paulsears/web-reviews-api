name: qa

on:
  release:
    types:
      - prereleased

jobs:

  validate-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check if release is a prerelease and follows SemVer with RC
        run: |
          RELEASE_VERSION="${{ github.event.release.tag_name }}"
          if echo "$RELEASE_VERSION" | grep -Eq '^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+$'; then
            echo "Valid RC prerelease: $RELEASE_VERSION"
          else
            echo "Invalid RC format. Expected vX.Y.Z-rc.N" && exit 1
          fi
  build:
    needs: validate-tag
    env:
      NODE_VERSION: 22
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build NestJS Application
        uses: ./.github/actions/build
        with:
          nodeVersion: ${{ env.NODE_VERSION }}
          nodeAuthToken: ${{ secrets.NODE_AUTH_TOKEN }}
          cache: "pnpm"
          cache-key: build-${{ github.job }}-pnpm

      - name: CI Checks
        uses: ./.github/actions/ci-checks
        with:
          nodeVersion: ${{ env.NODE_VERSION }}
          nodeAuthToken: ${{ secrets.NODE_AUTH_TOKEN }}
          sonarToken: ${{ secrets.SONAR_TOKEN }}
          sonarHostUrl: ${{ secrets.SONAR_HOST_URL }}
          cache: "pnpm"

  image:
    uses: aplaceformom/workflows/.github/workflows/docker-build.yaml@main
    needs: build
    with:
      env: qa
      deploy-tag: ${{github.sha}}
      ecr-root: true
      push: true
      deployment-role: "arn:aws:iam::373477481654:role/${{github.event.repository.name}}-deploy"
    secrets:
      build-args: |
        NODE_AUTH_TOKEN=${{secrets.NODE_AUTH_TOKEN}}
        APP_BUILD=${{github.sha}}
        APP_VERSION=${{github.ref_name}}
  deploy:
    uses: aplaceformom/ecs-deploy-action/.github/workflows/deploy-ecs.yml@v1
    needs: image
    with:
      target-environment: qa
      task-definition-file: infrastructure/tasks/task-definition.dev.json # This should be the qa task definition
      image-uri: 373477481654.dkr.ecr.us-west-2.amazonaws.com/${{github.event.repository.name}}:${{github.ref_name}}
      ecs-service: ${{github.event.repository.name}}
      ecs-cluster: default
